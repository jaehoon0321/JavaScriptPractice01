함수 펑션 클로저 복습 해라

<2025년 10월 16일 목요일>

📖<개념공부>
[ 원시타입 ]
숫자 타입 = 숫자. 정수와 실수 구분 없이 하나의 숫자타입만 존재  -> number
문자열 타입 = 문자 -> string
불리언 타입 = 참과 거짓 ->boolean
undefined 타입 = var 키워드로 선언된 변수에 암묵적으로 할당되는 값 -> undefined
null 타입 = 값이 없다는 것을 의도적으로 명시할때 사용하는 값  -> null
심볼(sumbol)타입 = ES6에서 추가된 7번째 타입 




## 자바스크립트 함수

---

1 다음 중 함수를 정의하는 올바른 방법은?

A) function = myFunc() {}

B) function myFunc() {}

C) def myFunc() {}

D) var function myFunc() {}
------------------------------------------------
정답 B 

------------------------------------------------
<개념공부>
1. 동일한 작업을 반복적으로 수행하는 코드를 함수로 만들어 사용하는 것이 효율적.
2. 함수는 객체 타입의 값.
3. 함수도 Object 이다. 

function myFunc() {
}

------------------------------------------------
2 함수를 호출(call)한다는 것은?

A) 함수를 복사한다

B) 함수를 삭제한다

C) 함수를 실행한다

D) 함수를 주석 처리한다

------------------------------------------------
정답 : C) 함수를 실행한다.

------------------------------------------------
<개념 공부>
함수는 함수 이름으로 호출하는 것이 아니라 , 함수 객체를 가리키는 식별자로 호출 하는 것.

var add = function add(x,y) {  -> add라는 식별자 =  add 라는 함수 정의시작 add(x,y)
return x + y; // 값을 이렇게 받을거야 
}; ";" 종료

console.log(add(1,2)); //출력할게 add(1,2) -> return 문의 값을 동일하게 받는 것.

 ------------------------------------------------
3 다음 중 함수의 반환값(return value)을 올바르게 사용하는 것은?

A) return x + y;

B) print(x + y);

C) echo(x + y);

D) output(x + y);

 ------------------------------------------------

정답: A) return x + y;

 ------------------------------------------------

4 다음 중 함수의 매개변수(parameter)에 대한 설명으로 옳은 것은?

A) 함수 외부에서만 사용 가능하다.

B) 함수 내부에서 전달받은 값을 저장하는 변수이다.

C) 항상 숫자여야 한다.

D) return 문 뒤에서 선언해야 한다.


 ------------------------------------------------

정답 : B) 함수 내부에서 전달받은 값을 저장하는 변수이다.

 ------------------------------------------------
<개념 공부>
매개변수(parameter)?  -> 함수가 호출될 때 외부에서 전달 되는 값.


function calculateArea(width, height) {          //calculateArea라는 함수를 정의할게 (widht, height) -> 매개변수 해당.
return width * height; //함수 내부에서만 사용 가능

 ------------------------------------------------
5 다음 중 기본적인 함수 호출 형태는?

A) function()myFunc;

B) myFunc[];

C) myFunc();

D) function myFunc;

 ------------------------------------------------

정답: D) function myFunc; 

->틀림 C)임 

------------------------------------------------
<개념공부>
값에 의한 호출

-원시 값은 변경 불가능한 값 성질
-원시 타입의 인자 값은 값 자체가 복사되어 매개변수에 전달

function changeVal(primitive, obj) {
  primitive += 100;
  obj.name = "WIEEE";
}

// 외부 상태
var num = 100; // 원시 값
var person = { name: "WI" }; // 객체

console.log(num); // 100
console.log(person); // { name: 'WI' }

changeVal(num, person); --------------------> 함수 호출 부분

console.log(num); // 100
console.log(person); // { name: 'WIEEE' } 💩

------------------------------------------------
6 다음 중 함수의 실행이 종료되는 즉시 반환되는 키워드는?

A) stop

B) return

C) end

D) break
------------------------------------------------
정답 B) return
------------------------------------------------
< 개념공부>
return => 함수가 처리한 최종 결과값을 다시 호출한곳으로 다시 돌려주는..
break => 반복문 끝낼때 사용
------------------------------------------------
7 함수에서 반환값이 없을 때 반환되는 기본 값은?

A) null

B) 0

C) undefined

D) false
------------------------------------------------
정답: C) undefined
------------------------------------------------
8 다음 중 익명 함수(Anonymous Function)를 정의한 것은?

A) function() { console.log("Hello"); }

B) function sayHello() { console.log("Hi"); }

C) var say = function sayHello() {};

D) function = hello() {};
------------------------------------------------
정답: 
------------------------------------------------
<개념공부>
익명함수(Anonymous function)
함수명 대신 변수명에 함수 코드를 저장하는 구현 방식.
익명함수는 호출 시 변수명을 훔수명 처럼 사용 하면 됨.

구조 
var 변수명 = function(매개변수){
실행문;
};

var hello = function(){
 document.write("Hello word");
};

hello(); //익명함수 변수명으로 호출

[익명함수의 변수명 변경]
//익명 함수 선언
var apple = function( ) { //apple 생성 = 함수 정의
  document.write("This is a banana."); 
};

//변수명 교체
var banana = apple;  //

중요!.. 항상 헷갈려 하는 개념
<!자바스크립트에서 등호 = 기호는 좌변과 우변의 같음을 의미하는 것이 아님!>
<우변의 값을 좌변에 대입을 하는 것임>

<단점>
호이스팅(함수 선언 보다 함수 호출이 윗 줄에 위치해도 실행되는 기능)이 적용되지 않는다

Ex)
//익명 함수 호출
orange( );

//익명 함수 선언
var orange = function( ) {
  document.write("This is an orange.");
};
// result : 오류

EX2)
//일반 함수 호출
Good( );
// result : Good Job!

//일반 함수 선언
function Good( ) {
  document.write("Good Job!");
}

익명함수는 호이스팅이 작동하지 않고, 일반 함수는 작동한다 . 


//변경된 변수명으로 함수 호출
banana( );
// result : This is a banana.
------------------------------------------------

9 함수 선언식(Declaration)과 함수 표현식(Expression)의 차이는?

A) 선언식은 호이스팅(hoisting)된다.

B) 표현식은 선언 전에 사용 가능하다.

C) 둘 다 동일하게 동작한다.

D) 표현식은 `return`이 불가능하다.

------------------------------------------------
정답: A) 선언식은 호이스팅(hoisting) 된다.

------------------------------------------------
10.  아래 함수의 결과는?

```jsx
function add(a, b){ return a + b; }
console.log(add(2, 3));
```

A) 23

B) 5

C) "2+3"

D) undefined
------------------------------------------------
정답 C) 2+3
------------------------------------------------
11 다음 코드의 출력값은?

```jsx
function greet(name){ return "Hi " + name; }
console.log(greet("Yumi"));
```

A) Hi + name

B) "Hi name"

C) Hi Yumi

D) undefined
------------------------------------------------
정답: C) Hi Yumi
------------------------------------------------

12 다음 중 기본 매개변수를 사용하는 올바른 예시는?

A) function f(a=10, b){}

B) function f(a,b=10){}

C) function f(a,b==10){}

D) function f(a,b=10:){}
------------------------------------------------

정답: B) function f (a,b=10){}

------------------------------------------------
13 함수 내부에서 선언된 변수는 어떤 범위를 가진다?

A) 전역 범위

B) 지역 범위

C) 파일 전체

D) 함수 외부
------------------------------------------------
정답 :  지역 범위 함수
------------------------------------------------
14 다음 중 전역변수(global variable)의 올바른 사용은?

A) 함수 안에서만 사용된다.

B) 함수 외부에서 선언되어 모든 함수가 접근 가능하다.

C) return 뒤에서만 가능하다.

D) 블록 안에서만 유효하다.

------------------------------------------------
정답 : 함수 외부에서 선언되어 모든 함수에 접근 가능하다.
------------------------------------------------
15 아래 코드의 결과는?

```jsx
let x = 10; 전역 범위 변수 x에 10을 할당
function test(){ test라는 함수 선언해주고 x 
  let x = 5;
  console.log(x);
}
test();
```

A) 10

B) 5

C) undefined

D) 오류 발생
------------------------------------------------
정답: 지역 변수인 5를 출력한다.
------------------------------------------------
16 아래 코드의 결과는?

```jsx
function square(x){ return x*x; }
console.log(square()); 작성을 안해줌 undefined * undefined
```

A) NaN

B) undefined

C) 0

D) Error
------------------------------------------------
정답: Nan 
------------------------------------------------
17 화살표 함수(Arrow Function)를 정의한 올바른 예시는?

A) const add = (a,b) => a + b;

B) function add(a,b) => a + b;

C) add = (a,b) { return a + b; }

D) const add(a,b) -> { return a+b }
------------------------------------------------

정답 :A
------------------------------------------------
18 아래 코드의 결과는?

```jsx
const multiply = (a,b=2) => a*b;  // 불변 const multiply 이름 정의 해주고 (a,b=2)는 a와 2를 받고 b값이 전달 되지 않으면 자동 2 가 됨 
console.log(multiply(5)); a는 5할당해주고 b= 할당 안해줘서 그냥 2 
```
A) 10

B) 7

C) 5

D) Error
------------------------------------------------
19 아래 중 함수 표현식에 대한 설명으로 올바른 것은?

A) 반드시 이름이 있어야 한다.

B) 선언 전에 호출해도 된다.

C) 변수에 할당할 수 있다.

D) return문을 쓸 수 없다.
------------------------------------------------
정답 : 변수에 할당할 수 있다.
------------------------------------------------
20 아래 코드의 출력은?

```jsx
var say = function(){ return "Hello"; }
console.log(say()); 

```

A) Hello

B) undefined

C) say

D) Error
------------------------------------------------
A) Hello
------------------------------------------------
21 콜백 함수(Callback Function)란?

A) 호출되지 않는 함수

B) 함수의 인수로 전달되는 함수

C) 반환되는 함수

D) 전역함수

------------------------------------------------
정답: 함수의 인수로 전달되는 함수B
------------------------------------------------
22 다음 중 콜백함수 사용의 예시는?

```jsx
function run(fn){ fn(); }
run( ? ) 

```

A) fn(){}

B) run();

C) function() { console.log("done"); }

D) call fn
------------------------------------------------
정답 : C done라는 익명함수를 정의..
------------------------------------------------
23 아래 코드의 결과는?

```jsx
function outer(){
  function inner(){
    return "inside";
  }
  return inner();
}
console.log(outer());
```

A) outer

B) inner

C) inside

D) undefined
------------------------------------------------
23 아래 코드의 결과는?

```jsx
function outer(){
  function inner(){
    return "inside";
  }
  return inner();
}
console.log(outer());
```

A) outer

B) inner

C) inside

D) undefined
------------------------------------------------
정답 : C) inside
------------------------------------------------
24 다음 중 즉시 실행 함수(IIFE)의 올바른 예시는?

A) function test()();

B) function(){}();

C) (function(){ console.log("run"); })();

D) run(){};
------------------------------------------------
정답 : C 

표현식으로 만들어주기 위해 삼수 정의 전체를 괄호를 붙여서 즉시 실행

즉시 실행 함수(IIFE, Immediately Invoked Function Expression)

함수 정의와 동시에 즉시 호출되는 함수

즉시 실행 함수는 반드시 그룹 연산자( ... )로 감싸야 한다.
즉시 실행 함수는 함수 이름이 없는 익명 함수를 사용하는 것이 일반적


------------------------------------------------
25 아래 코드의 출력은?

```jsx
(function(a,b){
  console.log(a+b);
})(3,4); 
```

A) 7

B) 34

C) undefined

D) Error
------------------------------------------------
정답 : A -> 함수 안에 () 괄호로 감싸여있기 때문에 즉시 실행 함수  3,4 =7
------------------------------------------------
26 아래 코드의 결과는?

```jsx
function makeAdder(x){
  return function(y){
    return x+y;
  }
}
const add5 = makeAdder(5);
console.log(add5(2)); 
```

A) 2

B) 5

C) 7

D) undefined
------------------------------------------------
정답 C
------------------------------------------------
27 클로저(Closure)의 특징은?

A) 함수 외부 변수를 수정할 수 있다.

B) 함수 내부의 변수를 외부에서 직접 접근할 수 있다.

C) 외부 함수의 변수를 기억하는 함수이다.

D) return이 없는 함수이다.
------------------------------------------------
정답 : C 외부 함수의 변수를 기억하는 함수이다.
------------------------------------------------
28 아래 코드의 출력은?
function counter(){
  let num = 0;
  return function(){
    num++;
    return num;
  }
}
const c = counter();
console.log(c());
console.log(c());
------------------------------------------------
정답 : C
------------------------------------------------
29 다음 중 함수가 일급 객체(First-Class Object)라는 뜻이 아닌 것은?

A) 변수에 저장 가능

B) 매개변수로 전달 가능

C) 반환값으로 사용 가능

D) 반드시 이름을 가져야 함
------------------------------------------------
정답 : D.
------------------------------------------------
30 setTimeout() 함수에 전달되는 첫 번째 인수는?

A) 시간

B) 함수

C) 문자열

D) 숫자
------------------------------------------------
정답 : 함수 setTimeout(함수 , 지연시간 ,.);
------------------------------------------------
31 아래 코드의 출력은?

```jsx
function sayHi(){
  console.log(this);
}
sayHi(); 
```

A) 전역 객체(window)

B) undefined

C) null

D) 빈 객체
------------------------------------------------
A 전역 객
------------------------------------------------
32 화살표 함수에서 this는?

A) 새로운 this를 바인딩한다

B) 상위 스코프의 this를 사용한다

C) 항상 undefined이다

D) 전역 객체를 가리킨다
------------------------------------------------
B 상위 스코프의 this 를 사용한다.
------------------------------------------------
33 map() 함수의 인수는?

A) 콜백 함수

B) 객체

C) 숫자

D) 배열
------------------------------------------------
정답 : A 콜백함수 
------------------------------------------------
34  filter() 함수의 반환값은?

A) 조건을 만족하는 요소만 모은 새 배열

B) true/false

C) 객체

D) 문자열

------------------------------------------------
정답 : A 조건만 만족하는 배
------------------------------------------------
35 아래 코드의 출력은?

```jsx
[1,2,3].map(x => x*2);// 1,2,3,을 해당되는거에 대입 계
```

A) [2,4,6]

B) [1,2,3]

C) 6

D) undefined
------------------------------------------------
정답 A
------------------------------------------------
36 아래 코드의 출력은?

```jsx
[1,2,3,4].filter(n => n%2===0); // 말그대로필터 해당되는것만 걸러 
```

A) [1,3]

B) [2,4]

C) [0,2,4]

D) [1,2,3,4]
------------------------------------------------
정답 B
------------------------------------------------
37 아래 코드의 결과는?

```jsx
[1,2,3].reduce((acc,cur)=>acc+cur,0);
```

A) 6

B) [1,2,3]

C) undefined

D) Error
------------------------------------------------
A)
------------------------------------------------
38 아래 코드의 출력은?

```jsx
const f = () => ({name:"Yumi"});//화살표 함수는 값을 받지 않고  중괄호 없이 한줄의 표현식으로 구성이 되어있으면 그 결과를 자동으로 반환 한다. (암시적 반환)
console.log(f());
```

A) undefined

B) {name:"Yumi"}

C) name:"Yumi"

D) Error
------------------------------------------------
정답 : B
------------------------------------------------
39 아래 코드의 출력은?

```jsx
const greet = (name="Guest") => "Hello " + name;// greet 라는 불변 객체 생성 이름은 게스트 , -> Hello 에 + Guest 를 해 그걸 출력을 하면 hello guset
console.log(greet()); 
```

A) Hello Guest

B) Hello

C) undefined

D) Error
------------------------------------------------
정답 : A

------------------------------------------------
40 함수 안에서 return문이 없을 때 결과는?

A) null

B) undefined

C) 0

D) Error

정답 : B

함수는 return 문을 사용하지 않으면 자동으로 undefined를 반환한다. 

